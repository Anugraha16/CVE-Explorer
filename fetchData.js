
const axios = require('axios');
const { MongoClient } = require('mongodb');

const API_URL = "https://services.nvd.nist.gov/rest/json/cves/2.0";
const RESULTS_PER_PAGE = 2000;  //datachunk_per_page
const START_INDEX =0

const mongoURI = 'mongodb://localhost:27017'; // MongoDB URI
const dbName = 'securin'; //Database name
const collectionName = 'data'; // Collection Name

let counter=246952
async function fetchCVEData(startIndex) {
    const params = {
        resultsPerPage: RESULTS_PER_PAGE,
        startIndex: startIndex
    };
    try {
        const response = await axios.get(API_URL, { params });
        return response.data;
    } catch (error) {
        console.error(`Error fetching data from API: ${error.message}`);
        return null;
    }
}


async function storeCVEData(client, cveData) {
    if (!cveData || !cveData.vulnerabilities) return;
    const vulnerabilities = cveData.vulnerabilities;
    try {
        counter+=vulnerabilities.length
        const db = client.db(dbName);
        const collection = db.collection(collectionName);
        const documents=vulnerabilities.map(vulnerability=>{
            return{
                _id:vulnerability.cve.id,
                info:vulnerability.cve
            }
        })
        await collection.insertMany(documents);
        console.log(`Stored ${counter} records in the database.`);
    } catch (error) {
        console.error(`Error storing data in the database: ${error.message}`);
    }
}


async function fetchAndStore() {
    const client = new MongoClient(mongoURI);

    try {
        await client.connect();
        console.log('Connected to MongoDB');

        let startIndex = START_INDEX;
        let totalResults = 0;

        while (true) {
            const cveData = await fetchCVEData(startIndex);
            if (!cveData) break; 

            totalResults += cveData.totalResults || 0;
            await storeCVEData(client, cveData);

            if (startIndex + RESULTS_PER_PAGE >= totalResults) break;
            startIndex += RESULTS_PER_PAGE;
        }

        console.log(`Total results fetched: ${counter}`);
    } catch (error) {
        console.error(`An error occurred: ${error.message}`);
    } finally {
        await client.close();
        console.log('Disconnected from MongoDB');
    }
}

fetchAndStore(); 



